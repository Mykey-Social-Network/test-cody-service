# todo: edit
name: Commit Stage
on: push
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mykey-social-network/service-template
  VERSION: ${{github.sha}}
  JWT_PUBLIC_KEY: ${{secrets.PUBLIC_KEY}}
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Code Vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      #      - name: Upload vulnerability report
      #        uses: github/codeql-action/upload-sarif@v2
      #        if: success() || failure()
      #        with:
      #          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build , unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew -PuserName=${{secrets.USERNAME}} -Ptoken=${{secrets.ACCESS_TOKEN}} build
      - name: Validate Kubernetes manifests
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.23.4
          kubeval: 0.16.1
          command: |
            kustomize build k8s | kubeval --strict -
  copy:
    needs: [build]
    name: Copy Properties to k8s
    if: ${{github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Copy Properties to k8s
        run: |
          chmod +x gradlew
          ./gradlew copyApplicationYml
      - name: Commit Updated k8s
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Synchronize k8s configuration with application settings"
          branch: master
#          skip_dirty_check: true


  package:
    name: Package And Publish
    if: ${{github.ref == 'refs/heads/master' }}
    needs: [build]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew -PuserName=${{secrets.USERNAME}} -Ptoken=${{secrets.ACCESS_TOKEN}} bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image:
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Log Into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: Publish container image (latest)
        run: |
          docker tag \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest


